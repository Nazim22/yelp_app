name: CI/CD Workflow

on:
  workflow_dispatch:  # ‚úÖ Manually triggered workflow
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write  # ‚úÖ Allows pushing manifest updates

jobs:
  checkout:
    name: üì• Checkout Repository
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

  build:
    name: üõ† Build and Install Dependencies
    runs-on: self-hosted
    needs: checkout
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

  code-scan:
    name: üîç SonarQube Code Analysis
    runs-on: self-hosted
    needs: build
    steps:
      - name: Run SonarQube Code Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=yelp-app
            -Dsonar.organization=my-org
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}

  docker_build:
    name: üê≥ Build Docker Image with Unique Tag
    runs-on: self-hosted
    needs: code-scan
    steps:
      - name: Define Image Tag
        run: echo "docker.io/${{ secrets.DOCKERHUB_USERNAME }}/yelp-app:${{ github.sha }}" > image_tag.txt

      - name: Debug Image Tag
        run: cat image_tag.txt

      - name: Upload Image Tag
        uses: actions/upload-artifact@v4
        with:
          name: image-tag
          path: image_tag.txt

      - name: Build Docker Image
        run: |
          docker build -t $(cat image_tag.txt) \
            --build-arg MAPBOX_TOKEN="${{ secrets.MAPBOX_TOKEN }}" \
            --build-arg DB_URL="${{ secrets.DB_URL }}" \
            --build-arg CLOUDINARY_CLOUD_NAME="${{ secrets.CLOUDINARY_CLOUD_NAME }}" \
            --build-arg CLOUDINARY_KEY="${{ secrets.CLOUDINARY_KEY }}" \
            --build-arg CLOUDINARY_SECRET="${{ secrets.CLOUDINARY_SECRET }}" .

  trivy_scan:
    name: üõ°Ô∏è Trivy Security Scan
    runs-on: self-hosted
    needs: docker_build
    steps:
      - name: Download Image Tag
        uses: actions/download-artifact@v4
        with:
          name: image-tag

      - name: Debug Image Tag Before Scanning
        run: cat image_tag.txt

      - name: Run Trivy Image Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: $(cat image_tag.txt)
          format: 'table'
          severity: 'HIGH,CRITICAL'

  docker_push:
    name: üöÄ Push Docker Image to Docker Hub
    runs-on: self-hosted
    needs: trivy_scan
    steps:
      - name: Download Image Tag
        uses: actions/download-artifact@v4
        with:
          name: image-tag

      - name: Debug Image Tag Before Push
        run: cat image_tag.txt

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker Image
        run: docker push $(cat image_tag.txt)

  update-k8s-manifest:
    name: üìÑ Update Kubernetes Deployment in External Repo
    runs-on: self-hosted
    needs: docker_push
    steps:
      - name: Download Image Tag
        uses: actions/download-artifact@v4
        with:
          name: image-tag

      - name: Debug Image Tag Before Updating Manifest
        run: cat image_tag.txt

      - name: Checkout `yelp-app-k8s`
        uses: actions/checkout@v4
        with:
          repository: Nazim22/yelp-app-k8s
          token: ${{ secrets.GH_PAT }}

      - name: Update Kubernetes Manifest
        run: |
          chmod +x update-k8s-manifest.sh
          ./update-k8s-manifest.sh $(cat image_tag.txt)

      - name: Commit & Push Changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add K8s/yelp-app-deployment.yaml
          git commit -m "üîÑ Updated manifest with new image tag" || echo "No changes to commit"
          git push origin main

  cleanup:
    name: üßπ Cleanup Image Tag File
    runs-on: self-hosted
    needs: update-k8s-manifest
    steps:
      - name: Delete Image Tag File
        run: rm -f image_tag.txt
