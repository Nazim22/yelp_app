name: CI/CD Workflow

on:
  workflow_dispatch:  # ✅ Manually triggered workflow
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write  # ✅ Allows pushing manifest updates

jobs:
  checkout:
    name: 📥 Checkout Repository
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

  build:
    name: 🛠 Build and Install Dependencies
    runs-on: self-hosted
    needs: checkout
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

  code_scan:
    name: 🔍 SonarQube Code Analysis
    runs-on: self-hosted
    needs: build
    steps:
      - name: Run SonarQube Code Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=yelp-app
            -Dsonar.organization=my-org
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}

  docker_build:
    name: 🐳 Build Docker Image
    runs-on: self-hosted
    needs: code_scan
    steps:
      - name: Define Image Tag
        run: |
          IMAGE_TAG_SHA=${{ secrets.DOCKERHUB_USERNAME }}/yelp-app:${{ github.sha }}
          echo "IMAGE_TAG_SHA=$IMAGE_TAG_SHA" >> $GITHUB_ENV
          echo $IMAGE_TAG_SHA > image_tag.txt

      - name: Build Docker Image
        run: |
          docker build -t $IMAGE_TAG_SHA \
            --build-arg MAPBOX_TOKEN="${{ secrets.MAPBOX_TOKEN }}" \
            --build-arg DB_URL="${{ secrets.DB_URL }}" \
            --build-arg CLOUDINARY_CLOUD_NAME="${{ secrets.CLOUDINARY_CLOUD_NAME }}" \
            --build-arg CLOUDINARY_KEY="${{ secrets.CLOUDINARY_KEY }}" \
            --build-arg CLOUDINARY_SECRET="${{ secrets.CLOUDINARY_SECRET }}" .

      - name: Upload Image Tag as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-tag
          path: image_tag.txt

  trivy_scan:
    name: 🛡️ Trivy Security Scan
    runs-on: self-hosted
    needs: docker_build
    steps:
      - name: Download Image Tag Artifact
        uses: actions/download-artifact@v4
        with:
          name: image-tag

      - name: Load Image Tag
        run: |
          IMAGE_TAG_SHA=$(cat image_tag.txt)
          echo "Scanning image: $IMAGE_TAG_SHA"
          echo "IMAGE_TAG_SHA=$IMAGE_TAG_SHA" >> $GITHUB_ENV

      - name: Run Trivy Image Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_TAG_SHA }}
          format: 'table'
          severity: 'HIGH,CRITICAL'

  docker_push:
    name: 🚀 Push Docker Image to Docker Hub
    runs-on: self-hosted
    needs: trivy_scan
    steps:
      - name: Download Image Tag Artifact
        uses: actions/download-artifact@v4
        with:
          name: image-tag

      - name: Load Image Tag
        run: |
          IMAGE_TAG_SHA=$(cat image_tag.txt)
          echo "Pushing image: $IMAGE_TAG_SHA"
          echo "IMAGE_TAG_SHA=$IMAGE_TAG_SHA" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker Image
        run: docker push $IMAGE_TAG_SHA

  update_k8s_manifest:
    name: 📄 Update Kubernetes Deployment in External Repo
    runs-on: self-hosted
    needs: docker_push
    steps:
      - name: Checkout Kubernetes Repo
        uses: actions/checkout@v4
        with:
          repository: Nazim22/yelp-app-k8s
          token: ${{ secrets.GH_PAT }}
          path: yelp-app-k8s

      - name: Download Image Tag Artifact
        uses: actions/download-artifact@v4
        with:
          name: image-tag

      - name: Load Image Tag
        run: |
          IMAGE_TAG_SHA=$(cat image_tag.txt)
          echo "Updating Kubernetes manifest with: $IMAGE_TAG_SHA"
          echo "IMAGE_TAG_SHA=$IMAGE_TAG_SHA" >> $GITHUB_ENV

      - name: Run Update Script
        run: |
          cd yelp-app-k8s/K8s
          chmod +x update-k8s-manifest.sh
          ./update-k8s-manifest.sh

      - name: Commit and Push Updated Manifest
        run: |
          cd yelp-app-k8s
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add K8s/yelp-app-deployment.yaml
          git commit -m "Update image tag to $IMAGE_TAG_SHA" || echo "No changes to commit"
          git push origin main

  test_run:
    name: 🧪 Run and Test Container
    runs-on: self-hosted
    needs: update_k8s_manifest
    steps:
      - name: Download Image Tag Artifact
        uses: actions/download-artifact@v4
        with:
          name: image-tag

      - name: Load Image Tag
        run: |
          IMAGE_TAG_SHA=$(cat image_tag.txt)
          echo "Running container with image: $IMAGE_TAG_SHA"
          echo "IMAGE_TAG_SHA=$IMAGE_TAG_SHA" >> $GITHUB_ENV

      - name: Create .env File
        run: |
          echo "MAPBOX_TOKEN=${{ secrets.MAPBOX_TOKEN }}" >> .env
          echo "DB_URL=${{ secrets.DB_URL }}" >> .env
          echo "CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}" >> .env
          echo "CLOUDINARY_KEY=${{ secrets.CLOUDINARY_KEY }}" >> .env
          echo "CLOUDINARY_SECRET=${{ secrets.CLOUDINARY_SECRET }}" >> .env

      - name: Run the Docker Container
        run: |
          docker run -d -p 3000:3000 --name yelp-app \
            --env-file .env \
            $IMAGE_TAG_SHA

      - name: Test Application Health Check
        run: |
          for i in {1..10}; do
            echo "Checking if application is up... Attempt $i"
            curl --fail http://localhost:3000 && break || sleep 5
          done

  cleanup:
    name: 🧹 Cleanup
    runs-on: self-hosted
    needs: test_run
    steps:
      - name: Remove Image Tag File
        run: rm -f image_tag.txt
